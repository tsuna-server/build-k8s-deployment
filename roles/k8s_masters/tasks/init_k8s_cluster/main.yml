---
- name: "\"kubeadm config images pull\" on master node"
  shell: "kubeadm config images pull"

- name: "Check whether k8s cluster has already initialized"
  ansible.builtin.script: ./check_whether_k8s_cluster_has_already_initialized.sh
  register: result_of_command
  failed_when: (result_of_command.rc not in [0, 1])

- name: "Get IP address"
  ansible.builtin.script: ./get_own_ip.sh
  register: result_get_own_ip

- name: "Declare a variable own_ip"
  ansible.builtin.set_fact:
    own_ip: "{{ result_get_own_ip.stdout }}"

- name: "Get network address"
  ansible.builtin.script: ./get_network_address_with_cidr_from_ip.sh {{ own_ip }}
  register: result_get_network_address_with_cidr_from_ip

- name: "Declare a variable network_address_with_cidr"
  ansible.builtin.set_fact:
    network_address_with_cidr: "{{ result_get_network_address_with_cidr_from_ip.stdout }}"

- name: "Debug own_ip, network_address"
  ansible.builtin.debug:
    msg: "own_ip={{ own_ip }}, network_address={{ network_address_with_cidr }}"

- name: "Init k8s cluster"
  command:
    argv: ["kubeadm", "init", "--apiserver-advertise-address={{ own_ip }}", "--apiserver-cert-extra-sans={{ own_ip }}", "--node-name", "{{ inventory_hostname }}", "--pod-network-cidr={{ network_address_with_cidr }}"]
  register: result
  when: result_of_command.rc == 0

- name: "Create a directory \"{{ ansible_env.HOME }}/.kube\" if it does not exist"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0640'

- name: "Copy kube config to {{ ansible_env.HOME }}/.kube/config"
  ansible.builtin.copy:
    remote_src: true
    src: "/etc/kubernetes/admin.conf"
    dest: "{{ ansible_env.HOME }}/.kube/config"
    owner: root
    group: root
    mode: '0640'
